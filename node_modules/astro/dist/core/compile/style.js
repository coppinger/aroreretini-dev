function createStylePreprocessor(transformStyle, cssDeps, errors) {
  const preprocessStyle = async (value, attrs) => {
    const lang = `.${(attrs == null ? void 0 : attrs.lang) || "css"}`.toLowerCase();
    try {
      const result = await transformStyle(value, lang);
      if (!result)
        return null;
      for (const dep of result.deps) {
        cssDeps.add(dep);
      }
      let map;
      if (result.map) {
        if (typeof result.map === "string") {
          map = result.map;
        } else if (result.map.mappings) {
          map = result.map.toString();
        }
      }
      return { code: result.code, map };
    } catch (err) {
      errors.push(err);
      return {
        error: err + ""
      };
    }
  };
  return preprocessStyle;
}
export {
  createStylePreprocessor
};
