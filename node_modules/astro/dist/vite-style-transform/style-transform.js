import { fileURLToPath } from "url";
import { createTransformStyleWithViteFn } from "./transform-with-vite.js";
function createViteStyleTransformer(viteConfig) {
  return {
    transformStyleWithVite: createTransformStyleWithViteFn(viteConfig)
  };
}
function getNormalizedIDForPostCSS(filename) {
  try {
    const filenameURL = new URL(`file://${filename}`);
    return fileURLToPath(filenameURL);
  } catch (err) {
    return filename;
  }
}
function createTransformStyles(viteStyleTransformer, filename, ssr, pluginContext) {
  const normalizedID = getNormalizedIDForPostCSS(filename);
  return async function(styleSource, lang) {
    const result = await viteStyleTransformer.transformStyleWithVite.call(pluginContext, {
      id: normalizedID,
      source: styleSource,
      lang,
      ssr,
      viteDevServer: viteStyleTransformer.viteDevServer
    });
    return result;
  };
}
export {
  createTransformStyles,
  createViteStyleTransformer
};
